services:
  redis:
    image: redis/redis-stack:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=redis:6379
    depends_on:
      - redis

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
      - kafka_secrets:/etc/kafka/secrets
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
      - zookeeper_secrets:/etc/zookeeper/secrets

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.8.0
    container_name: control-center
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021
    depends_on:
      - kafka
      - zookeeper

  data-source-service:
    image: hungvo2003vn/data-source-service:latest
    pull_policy: if_not_present
    container_name: data-source-service-container
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      DATA_SOURCE_SERVICE_PORT: 3000
      DATA_SOURCE_SERVICE_DOMAIN: data-source-service
      DATA_SOURCE_SERVICE_URL: http://data-source-service:3000

      DEFAULT_CRON_TIME: '*/2 * * * * *'
      
      KAFKA_CLIENT_ID: data-source-district-9
      BOOTSTRAP_SERVER: kafka:29092
      KAFKA_API_KEY: admin
      KAFKA_API_SECRET: admin-secret
      REQUEST_TIMEOUT: 30000
      CONNECTION_TIMEOUT: 10000
      ALLOW_AUTO_TOPIC_CREATION: 1
      TRANSACTION_TIMEOUT: 60000

      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - kafka
      - redis

  
  collection-tier-service:
    image: hungvo2003vn/collection-tier-service:latest
    pull_policy: if_not_present
    container_name: collection-tier-service-container
    ports:
      - "3001:3001"
    restart: unless-stopped
    environment:
      DATA_SOURCE_SERVICE_PORT: 3000
      DATA_SOURCE_SERVICE_DOMAIN: data-source-service
      DATA_SOURCE_SERVICE_URL: data-source-service:3000

      PRODUCER_SERVICE_PORT: 3001
      PRODUCER_SERVICE_DOMAIN: collection-tier-service
      PRODUCER_SERVICE_URL: http://collection-tier-service:3001

      CRON_TIME_CONSUMER_HOUSEHOLD: '*/2 * * * * *'
      CRON_CONSUMER_HOUSEHOLD_ENABLED: 0

      CRON_TIME_CONSUMER_AREA: '*/2 * * * * *'
      CRON_CONSUMER_AREA_ENABLED: 0

      CRON_TIME_CONSUMER_ANOMALY: '*/2 * * * * *'
      CRON_CONSUMER_ANOMALY_ENABLED: 0

      CONSUMER_HOUSEHOLD_ENABLED: 1
      CONSUMER_AREA_ENABLED: 1
      CONSUMER_ANOMALY_ENABLED: 1

      KAFKA_CLIENT_ID: collection-tier-district-9
      BOOTSTRAP_SERVER: kafka:29092
      KAFKA_API_KEY: admin
      KAFKA_API_SECRET: admin-secret
      REQUEST_TIMEOUT: 30000
      CONNECTION_TIMEOUT: 10000
      ALLOW_AUTO_TOPIC_CREATION: 1
      TRANSACTION_TIMEOUT: 60000

      REDIS_HOST: redis
      REDIS_PORT: 6379
      INACTIVE_TIME: 10000
    depends_on:
      - kafka
      - redis

  spark:
    image: thienphuc532266/spark:1.0
    container_name: spark
    environment:
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: myminioadmin
      MINIO_SECRET_KEY: myminioadmin
      KAFKA_BROKER: http://kafka:29092
      KAFKA_HOUSEHOLD_TOPIC: household_data
      KAFKA_AREA_TOPIC: area_data
      KAFKA_MAX_OFFSET: 500
      DASHBOARD_PORT: 4041
      SPARK_UI_PORT: 4040
    ports:
      - "4040:4040"
      - "4041:4041"
    depends_on:
      - minio
      - kafka
  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: myminioadmin
      MINIO_ROOT_PASSWORD: myminioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  data-access-tier:
    image: thienphuc532266/data-access-tier:1.0
    container_name: data-access-tier
    ports:
      - "3002:3002"
    restart: unless-stopped
    environment:
      PORT: 3002
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: myminioadmin
      MINIO_SECRET_KEY: myminioadmin
    depends_on:
      - minio

  anomaly-detection:
    image: tranminhhieu212/anomaly-detection:latest
    container_name: anomaly-detection
    ports:
      - "9098:4000"
    environment:
      BOOTSTRAP_SERVER: kafka:29092
      DATASOURCE_SERVER: http://data-source-service/data
      WINDOWSIZE: 90000
      CRON_TIME: '*/1 * * * * *'
      ANOMALY_THRESHOLD: 5
      PORT: 4000
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: myminioadmin
      MINIO_SECRET_KEY: myminioadmin
      DISTRICT_ANOMALY_BUCKET: district-anomaly-data
      DEVICE_ANOMALY_BUCKET: device-anomaly-data
      KAFKA_GROUP_ID: anomaly-detector-group
      MINIO_USE_SSL: false
      DEVICE_ANOMALY_THRESHOLD: 50
      MINIMUM_DELTA_CONSUMPTION: 100
    depends_on:
      - kafka
      - minio

  capstone-web:
    image: tranminhhieu212/capstone-web:latest
    container_name: capstone-web
    ports:
      - "9090:80"
    environment:
      VITE_API_BASE_URL: http://13.251.38.153:9090
      VITE_AWS_OAUTH_REDIRECT_SIGN_IN: http://13.251.38.153:9090
      VITE_AWS_OAUTH_REDIRECT_SIGN_OUT: http://13.251.38.153:9090
      VITE_BASE_ANOMALY: http://13.251.38.153:9098
      VITE_BASE_JOB_SERVICE: http://13.251.38.153:3000
      VITE_BASE_DEVICE_SERVICE: http://13.251.38.153:3001
      VITE_BASE_DATA_ACCESS_TIER: http://13.251.38.153:3002
      VITE_MAP_KEY: your_google_map_api_key
      VITE_FIREBASE_API_KEY: YOUR_API_KEY
      VITE_FIREBASE_AUTH_DOMAIN: your-dev-app.firebaseapp.com
      VITE_FIREBASE_DATABASE_URL: https://your-dev-app.firebaseio.com
      VITE_FIREBASE_PROJECT_ID: your-dev-app
      VITE_FIREBASE_STORAGE_BUCKET: your-dev-app.appspot.com
      VITE_FIREBASE_MESSAGING_SENDER_ID: YOUR_MESSAGING_SENDER_ID
      VITE_FIREBASE_APP_ID: YOUR_APP_ID
      VITE_AWS_PROJECT_REGION: 
      VITE_AWS_COGNITO_IDENTITY_POOL_ID: 
      VITE_AWS_COGNITO_REGION: 
      VITE_AWS_USER_POOLS_ID: 
      VITE_AWS_USER_POOLS_WEB_CLIENT_ID: 
      VITE_AWS_OAUTH_DOMAIN: 
    depends_on:
      - anomaly-detection
      - data-source-service
      - collection-tier-service
      - data-access-tier

volumes:
  redis_data:
  kafka_data:
  kafka_secrets:
  zookeeper_data:
  zookeeper_log:
  zookeeper_secrets:
  minio_data:

